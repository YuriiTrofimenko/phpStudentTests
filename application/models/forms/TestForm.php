<?php

namespace app\models\forms;

use app\models\Category;
use app\models\Test;
use yii\base\Exception;
use yii\base\Model;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;
use yii\Validators\UniqueValidator;

class TestForm extends \app\classes\Model
{
    public $categoryId;
    public $name;
    public $description;
    public $activity;

    private $_test;

    public function setTestModel($test) {
        if (!$test instanceof Test) {
            throw new Exception('объект не является тестом');
        }

        $this->_test = $test;
        $this->categoryId = $test->categoryId;
        $this->name = $test->name;
        $this->description = $test->description;
        $this->activity = $test->activity;
    }

    public function getTestModel() {
        return $this->_test;
    }

    public function rules() //нужны ли здесь create и update сценарии в прнципе?
    {
        return [
            'create' => [
                'name' => [
                    'required',
                    ['string', 'max' => 100],
                    ['unique', 'targetClass' => 'app\models\Test', 'targetAttribute' => ['name', 'categoryId']],
                ],
                'categoryId' => [
                    'required',
                    'integer',
                    ['exist','targetClass' => 'app\models\Category', 'targetAttribute' => 'id'],
                ],
                'description' => [
                    'required',
                    ['string', 'max' => 300],
                ],
                'activity' => [
                    'required',
                    'boolean'
                ]
            ],
            'update' => [
                'name' => [
                    'required',
                    ['string', 'max' => 100],
                    ['unique', 'targetClass' => 'app\models\Test', 'targetAttribute' => ['name', 'categoryId']],
                ],
                'categoryId' => [
                    'required',
                    'integer',
                    ['exist','targetClass' => 'app\models\Category', 'targetAttribute' => 'id'],
                ],
                'description' => [
                    'required',
                    ['string', 'max' => 300],
                ],
                'activity' => [
                    'required',
                    'boolean'
                ]
            ]
        ];
    }

    public function onProcess()
    {
        $this->_test->name=$this->name;
        $this->_test->categoryId=$this->categoryId;
        $this->_test->description=$this->description;
        $this->_test->activity = $this->activity;

        if ($this->scenario == 'create') {
            $this->_test->questions = 0;
        }

        if(!$this->_test->save(false))//зачем false? чтоб в ActiveRecord сохранилось без валидации
        {
            throw new \Exception('Не удалось сохранить тест');

        }

        return true; // TODO: Change the autogenerated stub
    }

    public function attributeLabels() {//attributelabels в модели формы?
        return [
            'name' => 'Название',
            'categoryId' => 'Категория',
            'questions' => 'Кол-во вопросов',
            'description' => 'Описание',
            'activity' => 'Активность',
        ];
    }

    public function getCategoryOptions() { //эт я не тупо скопипастил, а специально. Здесь нужен точно такойже массив.
        $query = Category::find();

        return ArrayHelper::map($query->asArray()->all(), 'id', 'name');
    }

}